(()=>{"use strict";const t=(t,e,a)=>{const s=document.createElement("button");return s.className=t,s.type=e,s.innerHTML=a,s},e=()=>{const e=document.createElement("div");e.className="create-task-block-wrapper";const a=document.createElement("form");a.className="create-task-block",a.noValidate=!0;const s=t("delete-all-tasks__button","button","DELETE ALL"),n=((t,e,a,s,n,c=!1)=>{const o=document.createElement("input");return o.className=t,o.name=e,o.id=s,o.type=a,o.placeholder=n,o.autofocus=c,o})("add-tasks__input","taskName","text","task","task...",!0),c=t("add-tasks__button","submit","NEW");return a.append(s,n,c),e.append(a),e},a=(t,e)=>{localStorage.setItem(t,JSON.stringify(e))},s=t=>JSON.parse(localStorage.getItem(t)??"[]"),n=(e,a,s,n)=>{const c=document.createElement("div");c.className="task-card",c.id=e;const o=document.createElement("div");o.className="task-text-wrapper";const l=((t,e,a,s)=>{const n=document.createElement("input");return n.className=t,n.type="checkbox",n.id=e,n.name=a,n.checked=s,n})("checked-task",`task${e}`,`task${e}`,n),r=document.createElement("span");r.className="check-style";const d=((t,e,a)=>{const s=document.createElement("label");return s.className=t,s.htmlFor=e,s.textContent=a,s})("task-label",`task${e}`,a);o.append(l,r,d);const m=t("delete-card__button","button","&times"),i=document.createElement("span");return i.className="creation-task-date",i.textContent=s,c.append(o,m,i),c},c=t=>{t.innerHTML="";const e=s("tasks");if(e.length>0)e.forEach((({id:e,text:a,date:s,isCompleted:c})=>{const o=n(e,a,s,c);t.append(o)}));else{const e=(()=>{const t=document.createElement("h3");return t.className="no-plans",t.textContent="You don`t have tasks",t})();t.append(e)}};const o=t=>{const e=s("tasks");e.push((t=>({id:Date.now().toString(),text:t,date:(new Date).toLocaleDateString(),isCompleted:!1}))(t)),a("tasks",e)},l=(t,e)=>{t.preventDefault();const{target:a}=t,n=a.taskName;var l;(l=n.value,s("tasks").some((({text:t})=>t===l))?(alert("this case already exists!"),!1):!!l.trim()||(alert("field cannot be empty!"),!1))&&(o(n.value),c(e),(t=>{t.value=""})(n),(t=>{t.scrollTo({left:0,top:t.scrollHeight-t.clientHeight,behavior:"smooth"})})(e))},r=t=>{const{target:e}=t;((t,e)=>{const n=s("tasks").map((a=>a.id===t?(a.isCompleted=e,a):a));a("tasks",n)})(e.closest(".task-card").id,e.checked)},d=(t,e)=>{const{target:n}=t,o=n.closest("div");n.classList.contains("delete-card__button")&&confirm("delete task?")&&((t=>{const e=s("tasks").filter((e=>e.id!==t));a("tasks",e)})(o.id),c(e))},m=t=>{(()=>{const t=s("tasks");t.length>0&&confirm("delete all task?")?(t.length=0,a("tasks",t)):alert("you have no tasks!")})(),c(t)};(()=>{const t=document.querySelector("#root"),a=document.createElement("main");a.className="container";const s=document.createElement("div");s.className="tasks-list";const n=e(),o=n.querySelector(".delete-all-tasks__button"),i=(()=>{const t=document.createElement("button");return t.type="button",t.className="top-button",t.innerHTML="&#8593",t})();t.append(a),a.prepend(n),a.append(s,i),n.addEventListener("submit",(t=>l(t,s))),s.addEventListener("input",r),s.addEventListener("click",(t=>d(t,s))),o.addEventListener("click",(()=>m(s))),s.addEventListener("scroll",(t=>((t,e)=>{t.currentTarget.scrollTop>100?e.classList.add("active"):e.classList.remove("active")})(t,i))),i.addEventListener("click",(()=>{s.scrollTo({left:0,top:0,behavior:"smooth"})})),c(s)})()})();